{
    "session_dir": "pretrained",
    "initialize": {
        "definitions": [
            {
                "group": "datasets",
                "name": "translation_ds",
                "spec": {
                    "class": "examples.language_translation.datasets.FrenchToEnglishDataset",
                    "kwargs": {
                        "path": "examples/language_translation/dataset/eng-fra.txt"
                    }
                }
            },
            {
                "group": "splits",
                "name": "my_split",
                "spec": {
                    "dataset_name": "translation_ds",
                    "ratio": [0.8, 0.2]
                }
            },
            {
                "group": "preprocessors",
                "name": "french_encoder",
                "spec": {
                    "class": "examples.language_translation.preprocessors.FrenchEncoder",
                    "fit": "my_split.train"
                }
            },
            {
                "group": "preprocessors",
                "name": "english_encoder",
                "spec": {
                    "class": "examples.language_translation.preprocessors.EnglishEncoder",
                    "fit": "my_split.train"
                }
            },
            {
                "group": "collators",
                "name": "my_collator",
                "spec": {
                    "factory_fn": "examples.language_translation.collators.build_collator"
                }
            },
            {
                "group": "models",
                "name": "encoder_model",
                "spec": {
                    "factory_fn": "examples.language_translation.models.build_encoder",
                    "args": [],
                    "kwargs": {
                        "hidden_size": 32
                    }
                }
            },
            {
                "group": "models",
                "name": "decoder_model",
                "spec": {
                    "factory_fn": "examples.language_translation.models.build_decoder",
                    "args": [],
                    "kwargs": {
                        "hidden_size": 32
                    }
                }
            },
            {
                "group": "batch_adapters",
                "name": "adapter",
                "spec": {
                    "class": "examples.language_translation.adapters.BatchAdapter",
                    "kwargs": {
                        "hidden_size": 32
                    }
                }
            },
            {
                "group": "optimizers",
                "name": "encoder_optimizer",
                "spec": {
                    "class": "SGD",
                    "kwargs": {
                        "lr": 0.001,
                        "momentum": 0.9
                    },
                    "model": "encoder_model"
                }
            },
            {
                "group": "optimizers",
                "name": "decoder_optimizer",
                "spec": {
                    "class": "SGD",
                    "kwargs": {
                        "lr": 0.001,
                        "momentum": 0.9
                    },
                    "model": "decoder_model"
                }
            },
            {
                "group": "losses",
                "name": "cross_entropy",
                "spec": {
                    "class": "CrossEntropyLoss",
                    "kwargs": {
                        "reduction": "sum"
                    },
                    "inputs": ["y_hat", "y"],
                    "transform": "examples.language_translation.transforms.transform"
                }
            },
            {
                "group": "metrics",
                "name": "CER",
                "spec": {
                    "class": "CharErrorRate",
                    "inputs": ["y_hat", "y"],
                    "transform": "examples.language_translation.transforms.DecodeClassesTransform"
                }
            },
            {
                "group": "neural_maps",
                "name": "neural_mapper",
                "spec": {
                    "mapper_model": "encoder_model"
                }
            },
            {
                "group": "datasets",
                "name": "gen_dataset",
                "spec": {
                    "link": "my_split.train",
                    "preprocessors": []
                }
            },
            {
                "group": "datasets",
                "name": "fake_dataset",
                "spec": {
                    "link": "my_split.val",
                    "preprocessors": ["neural_mapper"]
                }
            },
            {
                "group": "datasets",
                "name": "discriminator_dataset",
                "spec": {
                    "merge": ["my_split.train", "fake_dataset"]
                }
            }
        ],
        "pipelines": {
            "encoder_decoder": {
                "train_dataset": "my_split.train",
                "val_dataset": "my_split.val",
                "preprocessor_names": ["french_encoder", "english_encoder"],
                "collator_name": "my_collator",
                "batch_size": 1,
                "batch_adapter_name": "adapter",
                "neural_graph": [
                    {
                        "model_name": "encoder_model",
                        "inputs": ["x", "h"],
                        "outputs": ["outputs", "h_e"],
                        "optimizer_name": "encoder_optimizer"
                    },
                    {
                        "model_name": "decoder_model",
                        "inputs": ["y_shifted", "h_e"],
                        "outputs": ["y_hat", "h_d"],
                        "optimizer_name": "decoder_optimizer"
                    }
                ],
                "loss_name": "cross_entropy",
                "loss_display_name": "ed_loss",
                "metric_names": ["CER"],
                "metric_display_names": ["CER"],
                "device": "cpu"
            },
            "foo": {
                "train_dataset": "my_split.train",
                "val_dataset": "my_split.val",
                "preprocessor_names": ["french_encoder", "english_encoder"],
                "collator_name": "my_collator",
                "batch_size": 1,
                "batch_adapter_name": "adapter",
                "neural_graph": [
                    {
                        "model_name": "encoder_model",
                        "inputs": ["x", "h"],
                        "outputs": ["outputs", "h_e"],
                        "optimizer_name": "encoder_optimizer"
                    },
                    {
                        "model_name": "decoder_model",
                        "inputs": ["y_shifted", "h_e"],
                        "outputs": ["y_hat", "h_d"],
                        "optimizer_name": "decoder_optimizer"
                    }
                ],
                "loss_name": "cross_entropy",
                "loss_display_name": "foo_loss",
                "metric_names": ["CER"],
                "metric_display_names": ["foo_CER"],
                "device": "cpu"
            }
        }
    },
    "train": {
        "stages": [
            {
                "mode": "interleave",
                "pipelines": [
                    "encoder_decoder"
                ],
                "stop_condition": {
                    "class": "scaffolding.stop_conditions.EpochsCompleted",
                    "kwargs": {
                        "num_epochs": 2
                    }
                }
            },
            {
                "mode": "interleave",
                "pipelines": [
                    "encoder_decoder",
                    "foo"
                ],
                "stop_condition": {
                    "class": "scaffolding.stop_conditions.EpochsCompleted",
                    "kwargs": {
                        "num_epochs": 3
                    }
                }
            }
        ]
    }
}